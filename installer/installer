#!/bin/bash
version=0.1
red="\e[0;31m"
green="\e[0;32m"
normal="\e[0m"
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

installpath=$(mktemp -d)
finalpath="/srv/PufferPanel"
#TODO
#Redo web user logic
webuser="apache"
test=false

#Check distro and set proper webuser
#TODO
#Replace function with a more streamline and service driven concept
distro=`. /etc/os-release 2>/dev/null; echo $ID`
if [ ${distro} -eq "ubuntu" ]; then
    webuser="www-data";
elif [ ${distro} -eq "debian" ]; then
    webuser="www-data";
fi


#This is a helper function to allow for less repetition of command checks
function checkInstall {
    if type "$1" 1>/dev/null 2>&1; then
        echo -e "$2: [${green}Installed${normal}]";
    else
        echo -e "$2: [${red}Not Installed${normal}]";
        canInstall=false
    fi
}

#TODO
#Make this function simply return a boolean, or more likely, move to a more logical function
function validateCommand {
    if [ $? -ne 0 ]; then
        echo -e "${red}An error occured while installing, halting${normal}";
        exit
    fi
}

#TODO
#Add in a configuration only argument in case of bad configs
#Add in install-path setting
#Add in web server config to copy
while getopts "h?tu" opt; do
    case "$opt" in
    h)
        echo "PufferPanel Installer - Version $version"
        echo "Optional parameters: "
        echo "-u [user] | Sets the user/group owner of the panel files"
        echo "-t        | Checks if the depedencies are installed without installing panel"
        exit;
        ;;
    u)
        webuser=$OPTARG
        ;;
    t)
        test=true
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

echo "PufferPanel Installer - Version $version"
echo "------"
echo "Install path: ${finalpath}"
echo "Testing only: ${test}"
echo "Skipping languages: ${skiplang}"
echo "------"
echo "Checking dependencies:"

canInstall=true

#Check if PHP is installed
checkInstall php PHP

if $canInstall; then
    phpInstalled=true
else
    phpInstalled=false
fi

#Check if Git is installed
checkInstall git Git

#Check if MySQL is installed
checkInstall mysql MySQL-client

#Check if PHP dependencies are installed
result=$(php -r 'exit (version_compare(PHP_VERSION, "5.5.0") < 0 ? "1" : "0");' >/dev/null 2>&1);
if [ "$result" -eq "0" ]; then
    echo -e "PHP 5.5.0+: [${green}Installed${normal}]";
else
    echo -e "PHP 5.5.0+: [${red}Not Installed${normal}]";
    canInstall=false
fi

extensions=("curl" "hash" "openssl" "mcrypt" "pdo" "pdo_mysql")
for i in ${extensions[@]}; do
    phpcmd=`php <<EOF
<?php exit (extension_loaded("${i}") ? "1" : "0"); ?>
EOF`
    result=$($phpcmd >/dev/null 2>&1);
    if [ "$result" -ne "0" ]; then
        echo -e "PHP-${i}: [${green}Installed${normal}]";
    else
        echo -e "PHP-${i}: [${red}Not Installed${normal}]";
        canInstall=false
    fi
done

echo "------"

if ${canInstall}; then
    if ${test}; then
        echo -e "${green}All dependencies are validated${normal}"
        exit;
    else
        echo -e "${green}All dependencies are installed, processing with installation${normal}";
    fi
else
    echo -e "${red}Please ensure all dependencies are installed${normal}";
    exit;
fi

echo "-----"
echo "Extracting PufferPanel to ${installpath}"
installTar=$(mktemp -t XXXXX.tar.gz);
tar -xzf ${installTar} ${installpath}

echo "-----"
echo "Installing Composer"
curl -sS https://getcomposer.org/installer | php -- --install-dir=${installpath}/tools
validateCommand
php -d ${installpath} tools/composer.phar install
validateCommand

#TODO
#Validate remote hosts work correctly, along with non-standard ports
echo "-----"
echo "Preparing MySQL connection"
echo -e "${red}For this step, please use either root or an account with database creation and GRANT${normal}"

mysqlhost="localhost"
mysqluser="root"

echo -n "MySQL Host [${mysqlhost}]: "
read inputmysqlhost
if [ -n "${inputmysqlhost}" ]; then
    mysqlhost=${inputmysqlhost}
fi

echo -n "MySQL Username [${mysqluser}]: "
read inputmysqluser
if [ -n "${inputmysqluser}" ]; then
    mysqluser=${inputmysqluser}
fi

notValid=true
while ${notValid}; do
    echo -n "MySQL Password: "
    read -s mysqlpass
    if mysql -h ${mysqlhost} -u ${mysqluser} -p${mysqlpass} -e "exit"; then
        notValid=false
    else
        echo "${red}Database connection could not be established${normal}"
    fi
done;

echo "-----"
echo "Executing panel version installer"
#TODO
#This will be located in the panel directory, and will generate just the config.json

echo "-----"
echo "Finishing install"

mkdir -p ${finalpath}
shopt -s dotglob
mv ${installpath}/* ${finalpath}
chmod -R 777 ${finalpath}/src/logs

getent passwd ${webuser} > /dev/null
if [ $? -eq 0 ]; then
  echo "Chowning files to ${webuser} user"
  chown -R ${webuser}:${webuser} $finalpath
  if [ $? -ne 0 ]; then
    echo -e "${red}Could not chown ${finalpath} to ${webuser}, please do this manually${normal}"
  fi
else
  echo -e "${red}${webuser} user not found, cannot chown to correct user${normal}"
fi

echo -e "${green}PufferPanel has installed successfully.${normal}"
echo -e "If the above chown is not the correct user or did not work, please manually chown the ${finalpath} folder"
exit

##ATTACHED RESOURCES
__PUFFERPANEL.TAR.GZ__