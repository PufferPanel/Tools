#!/bin/bash
#
# PufferPanel - A Minecraft Server Management Panel
# Copyright (c) 2014 PufferPanel
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.

######################

# Function declaration
function isInstalled {
    if type "$1" 1>/dev/null 2>&1; then
        echo -e "$2: [${GREEN}Installed${NORMAL}]"
        return 0
    else
        echo -e "$2: [${RED}Not Installed${NORMAL}]"
        return 1
    fi
}

function printHelp {
    echo "PufferPanel Installer - Version ${VERSION} (${PANELVERSION})"
    echo "Optional parameters: "
    echo "-u [user] | Sets the user/group owner of the panel files"
    echo "-t        | Checks if the depedencies are installed without installing panel"
}

function findWebService() {
    if nginx -v >/dev/null 2>&1; then
        return "nginx"
    elif apache -v >/dev/null 2>&1; then
        return "apache"
    else
        return "none"
    fi
}

######################

# CONSTANTS
RED="\e[0;31m"
GREEN="\e[0;32m"
NORMAL="\e[0m"
VERSION="0.2.0"
PANELVERSION="0.8.1-beta"

######################

# Variables
finalpath="/srv/PufferPanel"
webuser=""
test=false
mysqlonly=true
webservice="auto"
installDev=false

######################

# Begin execution process
while getopts "hutp:w:" opt; do
    case "$opt" in
    h)
        printHelp
        exit
        ;;
    u)
        webuser=$OPTARG
        ;;
    t)
        test=true
        ;;
    p)
        finalpath=$OPTARG
        ;;
    w)
        case $OPTARG in
            apache|nginx|none|auto)
                webservice=$OPTARG
                ;;
            *)
                echo "${RED}Invalid web service passed${NORMAL}"
                ;;
        esac
    D)
       installDev=true
       ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

echo "PufferPanel Installer - Version ${VERSION} (${PANELVERSION})"
echo "------"

#TODO: We should see if this is ran as root, and warn if not

echo "Install path: ${finalpath}"
echo "Testing only: ${test}"
if [[ ${webservice} -eq "auto" ]]; then
    ${webservice}=findWebService
fi
echo "Web service: ${webservice}"
echo "------"
echo "Checking dependencies:"

#TODO: Improve entire dep checking
canInstall=true

if isInstalled php PHP; then
    phpInstalled=true
else
    canInstall=false
    phpInstalled=false
fi

if ! isInstalled git Git; then
    canInstall=false
fi

if ! isInstalled mysql MySQL-client; then
    canInstall=false
fi

if php -r 'exit (version_compare(PHP_VERSION, "5.5.0") < 0 ? "1" : "0");' >/dev/null 2>&1; then
    echo -e "PHP 5.5.0+: [${GREEN}Installed${NORMAL}]"
else
    echo -e "PHP 5.5.0+: [${RED}Not Installed${NORMAL}]"
    canInstall=false
fi

extensions=("curl" "hash" "openssl" "mcrypt" "pdo" "pdo_mysql")
for i in ${extensions[@]}; do
    phpcmd=`php <<EOF
<?php exit (extension_loaded("${i}") ? "1" : "0"); ?>
EOF`
    if ${phpcmd} >/dev/null 2>&1; then
        echo -e "PHP-${i}: [${GREEN}Installed${NORMAL}]"
    else
        echo -e "PHP-${i}: [${RED}Not Installed${NORMAL}]"
        canInstall=false
    fi
done

echo "------"

if ${canInstall}; then
    if ${test}; then
        echo -e "${GREEN}All dependencies are validated${NORMAL}"
        exit
    else
        echo -e "${GREEN}All dependencies are installed, processing with installation${NORMAL}"
    fi
else
    echo -e "${RED}Please ensure all dependencies are installed${NORMAL}"
    exit 1
fi

installpath=$(mktemp -d)

echo "-----"
echo "Extracting PufferPanel"
if installDev; then
        if ! git clone https://github.com/PufferPanel/PufferPanel.git ${installpath}; then
            echo -e "{RED}Failed to clone repo manually${NORMAL}"
            exit 1
        fi
else
    match=$(grep --text --line-number '^__PUFFERPANEL.TAR.GZ__$' $0 | cut -d ':' -f 1)
    payload_start=$((match + 1))
    if ! tail -n +${payload_start} $0 | tar -xzf - ${installpath}; then
        echo -e "${RED}An error occured while installing, falling back to manual${NORMAL}"
        gitcmd= \
           git clone https://github.com/PufferPanel/PufferPanel.git ${installpath} && \
           git --git-dir=${installpath} checkout tags/${PANELVERSION}
        if ! gitcmd; then
            echo -e "{RED}Failed to clone repo manually${NORMAL}"
            exit 1
        fi
    fi
fi

echo "Installing Composer"
if ! curl -sS https://getcomposer.org/installer | php -- --install-dir=${installpath}/tools; then
    echo -e "${RED}An error occured while installing, halting${NORMAL}"
    exit 1
fi

if ! php -d ${installpath} tools/composer.phar install; then
    echo -e "${RED}An error occured while installing, halting${NORMAL}"
    exit 1
fi

#TODO
#Should be callable without executing above
#Likely can rewrite this logic to be more clear
echo "-----"
echo "Preparing MySQL connection"
echo -e "${RED}For this step, please use either root or an account with database creation and GRANT${NORMAL}"

mysqlhost="localhost"
mysqluser="root"
mysqlport="3306"
mysqlpass="root"

echo -n "MySQL Host [${mysqlhost}]: "
read inputmysqlhost
if [ -n "${inputmysqlhost}" ]; then
    mysqlhost=${inputmysqlhost}
fi

echo -n "MySQL Port [${mysqlport}]: "
read inputmysqlport
if [ -n "${inputmysqlport}" ]; then
    mysqlhost=${inputmysqlport}
fi

echo -n "MySQL Username [${mysqluser}]: "
read inputmysqluser
if [ -n "${inputmysqluser}" ]; then
    mysqluser=${inputmysqluser}
fi

until mysql --host=${mysqlhost} --port=${mysqlport} -user=${mysqluser} -password=${mysqlpass} -e "exit"; do
    echo -n "MySQL Password: "
    read -s mysqlpass
done

echo "Executing panel version installer"
if ! php -f ${installpath}/install/install.php --host=${mysqlhost} --port=${mysqlport} --user={mysqluser} --pass={mysqlpass}; then
    echo "${RED}Executing database install has failed${NORMAL}"
    exit 1
fi

if [[ "${webservice}" -ne "none" ]]; then
    echo "Installing web config"
    case "$webservice" in
        nginx)
            #TODO: Generate/Move config to nginx folder
            ;;
        apache)
            #TODO: Generate/Move config to apache folder
            ;;
    esac
fi

echo "Finishing install"

mkdir -p ${finalpath}
shopt -s dotglob
mv ${installpath}/* ${finalpath}
chmod -R 774 ${finalpath}/src/{core,logs,cache}

if [ -z "$webuser" ]; then
    distro=`. /etc/os-release 2>/dev/null; echo $ID`
    if [[ "${distro}" -eq "ubuntu" ]]; then
        webuser="www-data";
    elif [[ "${distro}" -eq "debian" ]]; then
        webuser="www-data";
    else
        webuser=${webservice}
    fi
fi

if [ "$webuser" -ne "none" ]; then
    if getent passwd ${webuser} > /dev/null; then
        echo "Chowning files to ${webuser} user"
        if ! chown -R ${webuser}:${webuser} $finalpath; then
            echo -e "${RED}Could not chown ${finalpath} to ${webuser}, please do this manually${NORMAL}"
        fi
        echo -e "If the above chown is not the correct user or did not work, please manually chown the ${finalpath} folder"
    else
        echo -e "${RED}${webuser} user not found, cannot chown to correct user${NORMAL}"
    fi
fi

echo -e "${GREEN}PufferPanel has installed successfully.${NORMAL}"
exit

##ATTACHED RESOURCES
__PUFFERPANEL.TAR.GZ__